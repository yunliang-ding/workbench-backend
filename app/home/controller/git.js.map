{
    "version": 3,
    "sources": [
        "../../../src/home/controller/git.js"
    ],
    "names": [
        "require",
        "exec",
        "Git",
        "__before",
        "token",
        "header",
        "User",
        "http",
        "url",
        "json",
        "code",
        "isError",
        "message",
        "cookie",
        "data",
        "statusAction",
        "Repository",
        "open",
        "get",
        "then",
        "_repository",
        "getStatus",
        "_status",
        "map",
        "path",
        "_item",
        "isTypechange",
        "statusBit",
        "status",
        "isNew",
        "isModified",
        "isDeleted",
        "inWorkingTree",
        "isConflicted",
        "isIgnored",
        "isRenamed",
        "inIndex",
        "indexToWorkdir",
        "headToIndex",
        "console",
        "log",
        "error",
        "branchAction",
        "getCurrentBranch",
        "Branch",
        "name",
        "res",
        "_branch",
        "branch",
        "getstagedAction",
        "gitCommand",
        "stagedId",
        "some",
        "_file",
        "split",
        "stagedContent",
        "join",
        "checkoutAction",
        "addAction",
        "resetAction",
        "gitignoreAction",
        "waitcommitAction",
        "commitAction",
        "pushAction",
        "cmd",
        "resolve",
        "err",
        "stdout",
        "stderr",
        "filter",
        "_stdout",
        "Base"
    ],
    "mappings": "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",
    "file": "../../../src/home/controller/git.js",
    "sourcesContent": [
        "'use strict';\nimport Base from './base.js'\nimport { User } from './user'\nconst { exec } = require('child_process')\nconst Git = require(\"nodegit\")\n// const statusMapping = new Proxy({\n//   'A ': {\n//     inWorkingTree: 0,\n//     status: [\"INDEX_NEW\"]\n//   },\n//   '??': {\n//     inWorkingTree: 1,\n//     status: [\"WT_NEW\"]\n//   },\n//   'M ': {\n//     inWorkingTree: 0,\n//     status: [\"INDEX_MODIFIED\"]\n//   },\n//   ' M': {\n//     inWorkingTree: 1,\n//     status: [\"WT_MODIFIED\"]\n//   },\n//   'D ': {\n//     inWorkingTree: 0,\n//     status: [\"INDEX_DELETED\"]\n//   },\n//   ' D': {\n//     inWorkingTree: 1,\n//     status: [\"WT_DELETED\"]\n//   }\n// }, {\n//   get: (target, key, receiver) => {\n//     return target[key] || {\n//       inWorkingTree: 0,\n//       status: 0\n//     }\n//   }\n// })\nexport default class extends Base {\n  __before() {\n    // this.header('Access-Control-Allow-Origin', this.header('origin') || '*');\n    // this.header('Access-Control-Allow-Headers', 'x-requested-with');\n    // this.header('Access-Control-Request-Method', 'GET,POST,PUT,DELETE');\n    // this.header('Access-Control-Allow-Credentials', 'true');\n    let token = this.header('Csrf-Token')\n    if (User.token !== token && this.http.url !== '/file/login') {\n      this.json({\n        code: 403,\n        isError: true,\n        message: User.token === this.cookie('token') ? '无效的token' : '需要登录',\n        data: []\n      })\n    }\n  }\n  async statusAction() {\n    try {\n      const status = await Git.Repository.open(this.get('path')).then((_repository) => {\n        return _repository.getStatus().then(_status => {\n          return _status.map(_item => {\n            return {\n              path: _item.path(),\n              isTypechange: _item.isTypechange(),\n              statusBit: _item.statusBit(),\n              status: _item.status(),\n              isNew: _item.isNew(),\n              isModified: _item.isModified(),\n              isDeleted: _item.isDeleted(),\n              inWorkingTree: _item.inWorkingTree(),\n              isConflicted: _item.isConflicted(),\n              isIgnored: _item.isIgnored(),\n              isRenamed: _item.isRenamed(),\n              inIndex:_item.inIndex(),\n              indexToWorkdir: _item.indexToWorkdir(),\n              headToIndex: _item.headToIndex()\n            }\n          })\n        })\n      })\n      // let data = await this.gitCommand(`cd ${this.get('path')};git status -s`)\n      // let status = []\n      // data.data.map(item => {\n      //   status.push({\n      //     path: item.substr(2),\n      //     inWorkingTree: statusMapping[item.substring(0, 2)].inWorkingTree,\n      //     status: statusMapping[item.substring(0, 2)].status\n      //   })\n      // })\n      this.json({\n        data: status,\n        isError: false\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async branchAction() {\n    try {\n      const branch = await Git.Repository.open(this.get('path')).then((_repository) => {\n        return _repository.getCurrentBranch().then(res=>{\n          return Git.Branch.name(res).then((_branch) => {\n            return _branch\n          })\n        })\n      })\n      this.json({\n        data: branch,\n        isError: false\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async getstagedAction() {\n    try {\n      const { data } = await this.gitCommand(`cd ${this.get('path')};git ls-files -s`);\n      let stagedId = ''\n      data && data.some(_file => {\n        if (this.get('name') === _file.split('\\t')[1]) {\n          stagedId = _file.split('\\t')[0].split(' ')[1]\n          return true // 结束循环\n        }\n      })\n      const stagedContent = await this.gitCommand(`cd ${this.get('path')};git cat-file -p ${stagedId}`)\n      this.json({\n        data: stagedContent && stagedContent.data && stagedContent.data.join('\\n') || '',\n        isError: false\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async checkoutAction() {\n    try {\n      const { data, isError } = await this.gitCommand(`cd ${this.get('path')};git checkout -- ${this.get('filePath')}`)\n      this.json({\n        data,\n        isError\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async addAction() {\n    try {\n      const { data, isError } = await this.gitCommand(`cd ${this.get('path')};git add ${this.get('filePath')}`)\n      this.json({\n        data,\n        isError\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async resetAction() {\n    try {\n      const { data, isError } = await this.gitCommand(`cd ${this.get('path')};git reset HEAD -- ${this.get('filePath')}`)\n      this.json({\n        data,\n        isError\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async gitignoreAction() {\n    try {\n      const { data, isError } = await this.gitCommand(`cd ${this.get('path')};cat .gitignore;`)\n      this.json({\n        data,\n        isError\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async waitcommitAction() {\n    try {\n      const { data, isError } = await this.gitCommand(`cd ${this.get('path')};git log origin/${this.get('branch')}..HEAD --oneline;`)\n      this.json({\n        data,\n        isError\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async commitAction() {\n    try {\n      const { data, isError } = await this.gitCommand(`cd ${this.get('path')};git add .;git commit -m \"${this.get('commitInfo')}\";`)\n      this.json({\n        data,\n        isError\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async pushAction() {\n    try {\n      const { data, isError } = await this.gitCommand(`cd ${this.get('path')};git push;`)\n      this.json({\n        data,\n        isError\n      })\n    } catch (error) {\n      console.log(error)\n      this.json({\n        error,\n        isError: true\n      })\n    }\n  }\n  async gitCommand(cmd) {\n    try {\n      const data = await new Promise((resolve) => {\n        exec(cmd, (err, stdout, stderr) => {\n          console.log('err==>', err)\n          if (err === null) {\n            if (stderr !== \"\") {\n              stdout = stderr + stdout\n            }\n            resolve({\n              isError: false,\n              message: null,\n              data: stdout && stdout.split('\\n').filter(_stdout => {\n                return _stdout !== ''\n              }),\n              stderr\n            })\n          } else {\n            resolve({\n              isError: true,\n              message: stderr\n            })\n          }\n        })\n      })\n      return data\n    } catch (error) {\n      console.log(error)\n      return {\n        isError: true,\n        error\n      }\n    }\n  }\n}\n"
    ]
}